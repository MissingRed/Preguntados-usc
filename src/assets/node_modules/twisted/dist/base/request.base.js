"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const request_promise_1 = __importDefault(require("request-promise"));
const queue_1 = __importDefault(require("queue"));
const queueSystem = new queue_1.default();
queueSystem.autostart = true;
class RequestBase {
    static sendRequest(options) {
        return __awaiter(this, void 0, void 0, function* () {
            return request_promise_1.default(options);
        });
    }
    static setConcurrency(concurrency) {
        queueSystem.concurrency = concurrency;
    }
    static request(options) {
        return new Promise((resolve, reject) => {
            queueSystem.push((cb) => __awaiter(this, void 0, void 0, function* () {
                try {
                    const result = yield RequestBase.sendRequest(options);
                    resolve(result);
                    cb();
                }
                catch (e) {
                    reject(e);
                }
            }));
        });
    }
}
exports.RequestBase = RequestBase;
//# sourceMappingURL=request.base.js.map